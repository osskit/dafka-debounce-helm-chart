{{ if not .Values.disable }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Values.name }}
spec:
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  replicas: {{ .Values.replicaCount }}
  selector:
      matchLabels:
        app: {{ .Release.Name }}-kafka-debounce
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-kafka-debounce
        {{- range $key, $value := .Values.podLabels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      annotations:
      {{- if .Values.metrics }}
        prometheus.io/path: {{ .Values.metrics.path }}
        prometheus.io/port: {{ .Values.port | quote }}
        prometheus.io/scrape: {{ .Values.metrics.enabled | quote }}
      {{- end }}
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      containers:
        - name: {{ .Release.Name }}-{{ .Values.name }}
          image: {{ .Values.image.name }}:{{ .Values.image.tag }}
          imagePullPolicy: Always
{{ if .Values.auth.enabled }}
  {{ if not .Values.auth.saslPassword }}
          volumeMounts:
            - name: kafka-secrets-volume
              mountPath: /secrets-files
  {{ end }}
{{ end }}
          ports:
            - containerPort: {{ .Values.port }}
              name: main
          env:
          {{ if .Values.jvmOpts }}
            - name: JAVA_OPTS
              value: {{ .Values.jvmOpts | squote }}
          {{ end }}
            - name: KAFKA_BROKER
              value: {{ .Values.broker }}
            - name: GROUP_ID
              value: {{ .Values.groupId | default (printf "%s-dafka-debounce" (.Release.Name))  }}
            - name: SOURCE_TOPIC
              value: {{ .Values.sourceTopic }}
            - name: TARGET_TOPIC
              value: {{ .Values.targetTopic }}
            - name: WINDOW_DURATION
              value: {{ .Values.windowDuration | squote }}
  {{- if .Values.window.retentionPeriod  }}
            - name: WINDOW_RETENTION_PERIOD
              value: {{ .Values.window.retentionPeriod | squote }}
  {{- end }}
  {{- if .Values.window.memTableSizeMB  }}
            - name: TOTAL_MEMTABLE_MB
              value: {{ .Values.window.memTableSizeMB | squote }}
  {{- end }}
  {{- if .Values.window.offHeapSizeMB  }}
            - name: TOTAL_OFF_HEAP_SIZE_MB
              value: {{ .Values.window.offHeapSizeMB | squote }}
  {{- end }}
          {{- if .Values.window.deduplicationOperator  }}
            - name: DEDUPLICATION_OPERATOR
              value: {{ .Values.window.deduplicationOperator }}
          {{- end}}
  {{- if .Values.partitioning }}
          {{- if .Values.partitioning.outputPartitioningKey }}
            - name: OUTPUT_PARTITIONING_KEY
              value: {{ .Values.partitioning.outputPartitioningKey }}
          {{- end}}
          {{- if .Values.partitioning.outputPartitioningKeyFields  }}
            - name: OUTPUT_PARTITIONING_KEY_FIELDS
              value: {{ .Values.partitioning.outputPartitioningKeyFields }}
          {{- end}}
  {{- end}}
            - name: USE_PROMETHEUS
              value: {{ .Values.metrics.enabled | squote }}
            - name: MONITORING_SERVER_PORT
              value: {{ .Values.port | squote }}
            - name: USE_SASL_AUTH
              value: {{ .Values.auth.enabled | squote }}
            - name: ROOT_LOG_LEVEL
              value: {{ .Values.logLevel }}
        {{- if .Values.auth.enabled }}
            - name: SASL_USERNAME
              value: {{ .Values.auth.saslUsername }}
            - name: SASL_MECHANISM
              value: {{ .Values.auth.saslMechanism }}              
            {{- if .Values.auth.saslPassword }}
            - name: SASL_PASSWORD
              value: {{ .Values.auth.saslPassword | squote }}
            {{- else if .Values.auth.secrets.useOpaqueSecrets }}
            - name: SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-kafka-debounce
                  key: SASL_PASSWORD
            {{- else }}
            - name: SASL_PASSWORD_FILE_PATH
              value: /secrets-files/SASL_PASSWORD
            {{- end }}
            {{- if .Values.auth.secrets.useTruststore }}
            - name: TRUSTSTORE_FILE_PATH
              value: /secrets-files/TRUSTSTORE
            {{- if .Values.auth.secrets.useOpaqueSecrets}}
            - name: TRUSTSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-kafka-debounce
                  key: TRUSTSTORE_PASSWORD
            {{- else }}
            - name: TRUSTSTORE_PASSWORD_FILE_PATH
              value: /secrets-files/TRUSTSTORE_PASSWORD
            {{- end }}
            {{- end }}
            
        {{- end }}
          livenessProbe:
            httpGet:
              path: /alive
              port: {{ .Values.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            failureThreshold:  {{ .Values.livenessProbe.failureThreshold }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: /ready
              port: {{ .Values.port }}
          startupProbe:
{{ toYaml .Values.startupProbe | indent 12 }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{ if .Values.auth.enabled }}
  {{ if not .Values.auth.saslPassword }}
      volumes:
        - name: kafka-secrets-volume
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
      {{- if .Values.auth.secretProviderClassName }}
              secretProviderClass: {{ .Values.auth.secretProviderClassName }}
              {{- else }}
              secretProviderClass: {{ .Release.Name }}-kafka-debounce
      {{ end }}
  {{ end }}
{{ end }}
{{ end }}

